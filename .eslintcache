[{"E:\\Reactjs_projects\\memegenerator\\src\\index.js":"1","E:\\Reactjs_projects\\memegenerator\\src\\App.js":"2","E:\\Reactjs_projects\\memegenerator\\src\\Form.js":"3","E:\\Reactjs_projects\\memegenerator\\src\\keys.js":"4"},{"size":198,"mtime":1609340420012,"results":"5","hashOfConfig":"6"},{"size":1218,"mtime":1609425331269,"results":"7","hashOfConfig":"6"},{"size":1105,"mtime":1609424986082,"results":"8","hashOfConfig":"6"},{"size":118,"mtime":1609401972643,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ti5aaa",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Reactjs_projects\\memegenerator\\src\\index.js",[],["19","20"],"E:\\Reactjs_projects\\memegenerator\\src\\App.js",["21","22"],"E:\\Reactjs_projects\\memegenerator\\src\\Form.js",[],"E:\\Reactjs_projects\\memegenerator\\src\\keys.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":12,"column":13,"nodeType":"29","endLine":16,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":40,"column":13,"nodeType":"32","endLine":44,"endColumn":17},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]